{"version":3,"sources":["components/Layout/Layout.styles.js","themes/GlobalStyles.js","components/SEO.js","themes/theme.js","parts/Footer/Footer.styles.js","parts/Footer/Footer.js","parts/Navbar/Navbar.styles.js","images/ink-splash.svg","components/LanguageSelector/LanguageSelector.styles.js","components/LanguageSelector/LanguageSelector.js","parts/Navbar/Navbar.js","components/Layout/Layout.js","components/QuotesSection/QuotesSection.styles.js","reducers/quotesReducer.js","images/ernestbies.svg","images/github.svg","images/bitbucket.svg","utils/info.js","components/QuotesContainer/QuotesContainer.styles.js","components/Quote/Quote.styles.js","components/Quote/Quote.js","components/LoadingSpinner/LoadingSpinner.styles.js","components/LoadingSpinner/LoadingSpinner.js","components/QuotesContainer/QuotesContainer.js","actions/quotesActions.js","images/quote.svg","components/QuotesSection/QuotesSection.js","components/InfoSection/InfoSection.styles.js","images/pen.svg","images/curved-arrow.svg","components/SocialMediaIcon/SocialMediaIcon.styles.js","components/SocialMediaIcon/SocialMediaIcon.js","components/InfoSection/InfoSection.js","pages/Home.js","App.js","reportWebVitals.js","reducers/rootReducer.js","store/store.js","index.js"],"names":["StyledPage","styled","div","theme","colors","mainGradient","GlobalStyles","createGlobalStyle","SEO","title","t","useTranslation","Helmet","toUpperCase","htmlAttributes","lang","meta","name","content","font","size","sm","md","lg","titleLg","titleSm","nameLg","nameSm","quoteLg","quoteSm","family","weight","light","regular","bold","primary","secondary","mediaBreakpoints","StyledFooter","FooterText","p","Footer","StyledNav","nav","StyledAbsoluteImg","img","StyledSelector","LanguageType","active","LanguageDivider","LanguageSelector","i18n","changeLanguage","language","then","localStorage","setItem","onClick","Navbar","src","inkSplashImg","Layout","children","StyledQuoteSection","PageTitleContainer","PageTitle","StyledLine","LineDivider","LineImg","ADD_QUOTE","NEXT_QUOTE","PREVIOUS_QUOTE","FETCH_QUOTES_SUCCESS","FETCH_QUOTES_ERROR","initialState","quotes","visitedQuotes","index","isFetching","isConnected","links","portfolio","url","portfolioLogo","github","githubLogo","bitbucket","bitbucketLogo","StyledQuotesContainer","StyledBtn","isActive","css","StyledQuote","Quote","text","author","LoaderWrapper","LoaderText","isError","LoadingSpinner","color","loading","QuotesContainer","useSelector","state","quotesReducer","dispatch","useDispatch","useEffect","fetch","res","ok","json","type","Math","floor","random","length","catch","quote","QuotesSection","quoteImg","StyledInfoSection","InfoImageContainer","ImageWrapper","StyledImage","ArrowImage","position","InfoTextContainer","InfoTitleParagraph","InfoTextParagraph","IconsContainer","StyledMediaIcon","a","StyledImg","SocialMediaIcon","iconType","href","target","defaultProps","InfoSection","arrowImage","penImage","Home","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","i18next","init","interpolation","escapeValue","lng","getItem","resources","en","common","common_en","pl","common_pl","ReactDOM","render","I18nextProvider","document","getElementById"],"mappings":"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","file":"static/js/main.0c9baa67.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const StyledPage = styled.div`\r\n    background: ${({theme}) => theme.colors.mainGradient};\r\n    min-height: 100vh;\r\n    width: 100%;\r\n    position: absolute;\r\n    margin: 0 auto;\r\n    overflow: hidden;m\r\n`;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n    body {\r\n        margin: 0;\r\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n            'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n            sans-serif;\r\n        -webkit-font-smoothing: antialiased;\r\n        -moz-osx-font-smoothing: grayscale;\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    a {\r\n        color: white;\r\n        text-decoration: none;\r\n    }\r\n`;\r\n","import React from 'react';\r\nimport {Helmet} from 'react-helmet';\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst SEO = ({title}) => {\r\n\r\n    const {t} = useTranslation('common');\r\n\r\n    return (\r\n        <Helmet title={t(title).toUpperCase() + ' | ' + t('quotes_service').toUpperCase()}\r\n                htmlAttributes={{lang: 'en'}}\r\n                meta={[\r\n                    {\r\n                        name: `description`,\r\n                        content: 'Quotes Service created by Ernest Bieś',\r\n                    }\r\n                ]}\r\n        />\r\n    );\r\n}\r\n\r\nexport default SEO;\r\n","export const theme = {\r\n    font: {\r\n        size: {\r\n            sm: '12px',\r\n            md: '14px',\r\n            lg: '16px',\r\n            titleLg: '25px',\r\n            titleSm: '20px',\r\n            nameLg: '50px',\r\n            nameSm: '35px',\r\n            quoteLg: '30px',\r\n            quoteSm: '25px'\r\n        },\r\n        family: 'Lato, serif',\r\n        weight: {\r\n            light: 300,\r\n            regular: 400,\r\n            bold: 700,\r\n        },\r\n    },\r\n    colors: {\r\n        primary: '#f5f0da',\r\n        secondary: '#1c1c1c',\r\n        mainGradient: 'linear-gradient(#f5f0da 75%, #FFFFFF)'\r\n    },\r\n    mediaBreakpoints: {\r\n        sm: '@media all and (max-width: 576px)',\r\n        md: '@media all and (max-width: 768px)',\r\n        lg: '@media all and (max-width: 992px)',\r\n    },\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledFooter = styled.div`\r\n    min-height: 70px;\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    z-index: 999;\r\n    background-color: ${({theme}) => theme.colors.secondary};\r\n    position: absolute;\r\n    bottom: 0;\r\n`;\r\n\r\nexport const FooterText = styled.p`\r\n    font-family: ${({theme}) => theme.font.family};\r\n    font-size: ${({theme}) => theme.font.size.md};\r\n    font-weight: ${({theme}) => theme.font.weight.light};\r\n    color: white;\r\n    text-align: center;\r\n    margin: 0;\r\n    white-space: pre-wrap;\r\n    line-height: 1.5;\r\n    width: 80%;\r\n    \r\n    ${({ theme }) => theme.mediaBreakpoints.sm} {\r\n        font-size: ${({theme}) => theme.font.size.sm};\r\n    }\r\n`;\r\n","import React from \"react\";\r\nimport {FooterText, StyledFooter} from \"./Footer.styles\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst Footer = () => {\r\n\r\n    const {t} = useTranslation('common');\r\n\r\n    return (\r\n        <StyledFooter>\r\n            <FooterText>&copy; 2021 {t('quotes_service')}, ernestbies.com. {t('footer_text')}</FooterText>\r\n        </StyledFooter>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledNav = styled.nav`\r\n    width: 100%;\r\n    position: relative;\r\n    min-height: 175px;\r\n`;\r\n\r\nexport const StyledAbsoluteImg = styled.img`\r\n    width: 300px;\r\n    height: 300px; \r\n    pointer-events: none;\r\n    user-select: none;\r\n    position: absolute;\r\n    right: -120px;   \r\n    top: -120px;\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/ink-splash.5bbb9786.svg\";","import styled from 'styled-components';\r\n\r\nexport const StyledSelector = styled.div`\r\n    width: 100px;\r\n    height: 100px;\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n    z-index: 2;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n`;\r\n\r\nexport const LanguageType = styled.p`\r\n    font-size: 20px;\r\n    color: ${({active}) => active ? 'orange' : 'grey'};\r\n    font-family: Patrick Hand SC, serif;\r\n    font-weight: ${({active}) => active ? 700 : 400};\r\n    margin: 0;\r\n    margin-left: 10px;\r\n    transition: all 1s ease-in-out;\r\n    cursor: pointer;\r\n    \r\n    &:hover {\r\n        color: orange;\r\n    }\r\n    \r\n    ${({ theme }) => theme.mediaBreakpoints.md} {\r\n        font-size: 18px;\r\n    }\r\n`;\r\n\r\nexport const LanguageDivider = styled.div`\r\n    background: linear-gradient(grey, ${({theme}) => theme.colors.secondary}, grey);\r\n    height: 1px;\r\n    width: 25px;\r\n    margin-left: 10px;\r\n    margin-top: 7px;\r\n    margin-bottom: 7px;\r\n`;\r\n","import {LanguageDivider, LanguageType, StyledSelector} from \"./LanguageSelector.styles\";\r\nimport React from \"react\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst LanguageSelector = () => {\r\n\r\n    const {i18n} = useTranslation('common');\r\n\r\n    const changeLanguage = (language) => {\r\n        i18n.changeLanguage(language).then(() => localStorage.setItem('language', language));\r\n    }\r\n\r\n    return (\r\n        <StyledSelector>\r\n            <LanguageType\r\n                active={i18n.language === 'en'}\r\n                onClick={() => changeLanguage('en')}>\r\n                {'En'}\r\n            </LanguageType>\r\n            <LanguageDivider/>\r\n            <LanguageType\r\n                active={i18n.language === 'pl'}\r\n                onClick={() => changeLanguage('pl')}>\r\n                {'Pl'}\r\n            </LanguageType>\r\n        </StyledSelector>\r\n    )\r\n}\r\n\r\nexport default LanguageSelector;\r\n","import {StyledAbsoluteImg, StyledNav} from \"./Navbar.styles\";\r\nimport React from \"react\";\r\nimport inkSplashImg from \"../../images/ink-splash.svg\";\r\nimport LanguageSelector from \"../../components/LanguageSelector/LanguageSelector\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <StyledNav>\r\n            <LanguageSelector/>\r\n            <StyledAbsoluteImg src={inkSplashImg}/>\r\n        </StyledNav>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {StyledPage} from \"./Layout.styles\";\r\nimport {GlobalStyles} from \"../../themes/GlobalStyles\";\r\nimport SEO from \"../SEO\";\r\nimport {ThemeProvider} from \"styled-components\";\r\nimport {theme} from \"../../themes/theme\";\r\nimport Footer from \"../../parts/Footer/Footer\";\r\nimport Navbar from \"../../parts/Navbar/Navbar\";\r\n\r\nconst Layout = ({title, children}) => {\r\n    return (\r\n        <>\r\n            <SEO title={title}/>\r\n            <GlobalStyles/>\r\n            <ThemeProvider theme={theme}>\r\n                <StyledPage>\r\n                    <Navbar/>\r\n                    {children}\r\n                    <Footer/>\r\n                </StyledPage>\r\n            </ThemeProvider>\r\n        </>\r\n    );\r\n};\r\n\r\nLayout.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.node.isRequired\r\n}\r\n\r\nexport default Layout;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledQuoteSection = styled.div`\r\n    min-height: 500px;\r\n    background-color: transparent;\r\n    width: 100%;    \r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n`;\r\n\r\nexport const PageTitleContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    width: 90%;\r\n`;\r\n\r\nexport const PageTitle = styled.p`\r\n    font-family: Patrick Hand SC, serif;\r\n    font-size: ${({theme}) => theme.font.size.nameLg};\r\n    color: orange;\r\n    text-align: center;\r\n    z-index: 2;\r\n    white-space: pre-wrap;\r\n    margin: 0;\r\n    margin-bottom: 10px;\r\n    \r\n    ${({ theme }) => theme.mediaBreakpoints.sm} {\r\n        font-size: ${({theme}) => theme.font.size.nameSm};\r\n    }\r\n`;\r\n\r\nexport const StyledLine = styled.div`\r\n    width: 40px;\r\n    height: 1px;    \r\n    background-color: orange;\r\n`;\r\n\r\nexport const LineDivider = styled.div`\r\n    display: flex;   \r\n    align-items: center;\r\n    justify-content: center; \r\n    height: 10px;\r\n`;\r\n\r\nexport const LineImg = styled.img`\r\n    width: 20px;\r\n    height: 20px;\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n    pointer-events: none;\r\n    user-select: none;\r\n`;\r\n\r\n\r\n","export const ADD_QUOTE = 'ADD_QUOTE';\r\nexport const NEXT_QUOTE = 'NEXT_QUOTE';\r\nexport const PREVIOUS_QUOTE = 'PREVIOUS_QUOTE';\r\nexport const FETCH_QUOTES_SUCCESS = 'FETCH_QUOTES_SUCCESS';\r\nexport const FETCH_QUOTES_ERROR = 'FETCH_QUOTES_ERROR';\r\n\r\nconst initialState = {\r\n    quotes: [],\r\n    visitedQuotes: [],\r\n    index: -1,\r\n    isFetching: true,\r\n    isConnected: true\r\n}\r\n\r\nexport const quotesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FETCH_QUOTES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                quotes: action.quotes,\r\n                isFetching: false,\r\n                index: 0,\r\n                visitedQuotes: action.visitedQuotes\r\n            }\r\n\r\n        case FETCH_QUOTES_ERROR:\r\n            return {\r\n                ...state,\r\n                isConnected: false,\r\n                isFetching: true\r\n            }\r\n\r\n        case ADD_QUOTE:\r\n            return {\r\n                ...state,\r\n                visitedQuotes: [...state.visitedQuotes, action.quote],\r\n            };\r\n\r\n        case NEXT_QUOTE:\r\n            return {\r\n                ...state,\r\n                index: state.index + 1\r\n            }\r\n\r\n        case PREVIOUS_QUOTE:\r\n            return {\r\n                ...state,\r\n                index: state.index - 1\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export default __webpack_public_path__ + \"static/media/ernestbies.492df404.svg\";","export default __webpack_public_path__ + \"static/media/github.24c12438.svg\";","export default __webpack_public_path__ + \"static/media/bitbucket.61fabe5b.svg\";","import portfolioLogo from '../images/ernestbies.svg';\r\nimport githubLogo from '../images/github.svg';\r\nimport bitbucketLogo from '../images/bitbucket.svg';\r\n\r\nexport const API_URL = 'https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json';\r\n\r\nexport const links = {\r\n    portfolio: {\r\n        title: 'ernestbies.com',\r\n        url: 'https://ernestbies.com',\r\n        img: portfolioLogo\r\n    },\r\n    github: {\r\n        title: 'GitHub',\r\n        url: 'https://github.com/ernestbies',\r\n        img: githubLogo\r\n    },\r\n    bitbucket: {\r\n        title: 'Bitbucket',\r\n        url: 'https://bitbucket.org/ernestbies',\r\n        img: bitbucketLogo\r\n    }\r\n}\r\n","import styled, {css} from 'styled-components';\r\n\r\nexport const StyledQuotesContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin: 30px;\r\n    width: 100%;\r\n    min-height: 300px;\r\n    \r\n    ${({ theme }) => theme.mediaBreakpoints.sm} {\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nexport const StyledBtn = styled.div`\r\n    color: ${({theme}) => theme.colors.primary};\r\n    background-color: ${({theme}) => theme.colors.secondary};\r\n    opacity: ${({isActive}) => isActive ? 1 : 0.4};\r\n    cursor: ${({isActive}) => isActive ? 'pointer' : 'auto'};\r\n    outline: 0;\r\n    min-width: 50px;\r\n    height: 50px;\r\n    margin: 50px;\r\n    border-radius: 50%;\r\n    text-align: center;\r\n    font-family: Patrick Hand SC, serif;\r\n    font-size: 30px;\r\n    user-select: none;\r\n    transition: 1s all ease-in-out;\r\n    \r\n    ${({isActive}) => isActive && css`\r\n        &:hover {\r\n            transform: scale(1.1);\r\n            color: orange;\r\n        }\r\n    `};\r\n    \r\n    ${({ theme }) => theme.mediaBreakpoints.sm} {\r\n        margin: 10px;\r\n    }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledQuote = styled.p`\r\n    position: relative;\r\n    text-align: center;\r\n    color: black;\r\n    font-weight: 300;\r\n    font-family: Gwendolyn, serif;\r\n    font-size: ${({theme}) => theme.font.size.quoteLg};\r\n    padding: 30px;\r\n    background: linear-gradient(to right, orange 3px, transparent 3px) 0 100%,\r\n                linear-gradient(to left, orange 3px, transparent 3px) 100% 0,\r\n                linear-gradient(to bottom, orange 3px, transparent 3px) 100% 0,\r\n                linear-gradient(to top, orange 3px, transparent 3px) 0 100%;\r\n    background-repeat: no-repeat;\r\n    background-size: 14px 14px;\r\n    position: relative;\r\n    width: 50%;\r\n    max-width: 500px;\r\n    white-space: pre-wrap;\r\n\r\n    &:before {\r\n        position: absolute;\r\n        font-family: Cambria, serif;\r\n        font-size: 50px;\r\n        content: '“';\r\n        color: orange;\r\n        top: -10px;\r\n        left: 0;\r\n    }\r\n    \r\n    &:after {\r\n        position: absolute;\r\n        font-family: Cambria, serif;\r\n        font-size: 50px;\r\n        content: '”';\r\n        color: orange;\r\n        bottom: -30px;\r\n        right: 0;\r\n    }    \r\n    \r\n        ${({ theme }) => theme.mediaBreakpoints.sm} {\r\n        font-size: ${({theme}) => theme.font.size.quoteSm};\r\n    }\r\n`;\r\n","import {StyledQuote} from \"./Quote.styles\";\r\nimport React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Quote = ({text, author}) => {\r\n    return (\r\n        <StyledQuote>\r\n            {text + '\\n— ' + author}\r\n        </StyledQuote>\r\n    )\r\n}\r\n\r\nQuote.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    author: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Quote;\r\n","import styled from 'styled-components';\r\n\r\nexport const LoaderWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin: 30px;\r\n`;\r\n\r\nexport const LoaderText = styled.p`\r\n    font-family: ${({theme}) => theme.font.family};\r\n    color: ${({isError}) => isError ? 'red' : 'black'};\r\n    font-size: ${({theme}) => theme.font.size.lg};\r\n    text-align: center;\r\n`;\r\n","import React from \"react\";\r\nimport {LoaderText, LoaderWrapper} from \"./LoadingSpinner.styles\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst LoadingSpinner = ({isConnected}) => {\r\n\r\n    const {t} = useTranslation('common');\r\n\r\n    return (\r\n        <LoaderWrapper>\r\n            {\r\n                isConnected ?\r\n                    <>\r\n                        <ClipLoader color={'orange'} loading={true} size={70}/>\r\n                        <LoaderText>{t('loading_data')}</LoaderText>\r\n                    </> :\r\n                    <LoaderText isError>{t('loading_error')}</LoaderText>\r\n            }\r\n        </LoaderWrapper>\r\n    );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import React, {useEffect} from \"react\";\r\nimport {addQuote, fetchQuotes, nextQuote, previousQuote} from \"../../actions/quotesActions\";\r\nimport {StyledBtn, StyledQuotesContainer} from \"./QuotesContainer.styles\";\r\nimport Quote from \"../Quote/Quote\";\r\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nconst QuotesContainer = () => {\r\n\r\n    const {visitedQuotes, quotes, index, isFetching, isConnected} = useSelector(state => state.quotesReducer);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchQuotes());\r\n    }, [dispatch]);\r\n\r\n    const nextQuoteFromList = () => {\r\n        if(index + 1 === visitedQuotes.length) {\r\n            dispatch(addQuote(quotes[Math.floor(Math.random() * quotes.length)]));\r\n        }\r\n        dispatch(nextQuote());\r\n    }\r\n\r\n    const previousQuoteFromList = () => {\r\n        if(index - 1 >= 0) {\r\n            dispatch(previousQuote());\r\n        }\r\n    }\r\n\r\n    return (\r\n        <StyledQuotesContainer>\r\n            {\r\n                isFetching ? <LoadingSpinner isConnected={isConnected}/> :\r\n                    <>\r\n                        <StyledBtn isActive={index !== 0} onClick={previousQuoteFromList}>{'<'}</StyledBtn>\r\n                        <Quote text={visitedQuotes[index]?.quote} author={visitedQuotes[index]?.author}/>\r\n                        <StyledBtn isActive onClick={nextQuoteFromList}>{'>'}</StyledBtn>\r\n                    </>\r\n            }\r\n        </StyledQuotesContainer>\r\n    )\r\n};\r\n\r\nexport default QuotesContainer;\r\n\r\n","import {\r\n    ADD_QUOTE,\r\n    FETCH_QUOTES_ERROR,\r\n    FETCH_QUOTES_SUCCESS,\r\n    NEXT_QUOTE,\r\n    PREVIOUS_QUOTE\r\n} from \"../reducers/quotesReducer\";\r\nimport {API_URL} from \"../utils/info\";\r\n\r\nexport const addQuote = (quote) => ({type: ADD_QUOTE, quote});\r\nexport const nextQuote = () => ({type: NEXT_QUOTE});\r\nexport const previousQuote = () => ({type: PREVIOUS_QUOTE});\r\n\r\nexport const fetchQuotes = () => dispatch => {\r\n    fetch(API_URL)\r\n        .then((res) => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            } else {\r\n                dispatch({\r\n                    type: FETCH_QUOTES_ERROR\r\n                });\r\n            }\r\n        })\r\n        .then(res => {\r\n            dispatch({\r\n                type: FETCH_QUOTES_SUCCESS,\r\n                quotes: res,\r\n                visitedQuotes: [res[Math.floor(Math.random() * res.length)]]\r\n            });\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: FETCH_QUOTES_ERROR\r\n            });\r\n        });\r\n\r\n};\r\n\r\n","export default __webpack_public_path__ + \"static/media/quote.76a85f51.svg\";","import React from \"react\";\r\nimport {\r\n    LineDivider,\r\n    LineImg,\r\n    PageTitle,\r\n    PageTitleContainer,\r\n    StyledLine,\r\n    StyledQuoteSection\r\n} from \"./QuotesSection.styles\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport QuotesContainer from \"../QuotesContainer/QuotesContainer\";\r\nimport quoteImg from '../../images/quote.svg';\r\n\r\nconst QuotesSection = () => {\r\n\r\n    const {t} = useTranslation('common');\r\n\r\n    return (\r\n        <StyledQuoteSection>\r\n            <PageTitleContainer>\r\n                <PageTitle>{t('quotes_service')}</PageTitle>\r\n                <LineDivider>\r\n                    <StyledLine/>\r\n                    <LineImg src={quoteImg}/>\r\n                    <StyledLine/>\r\n                </LineDivider>\r\n            </PageTitleContainer>\r\n            <QuotesContainer/>\r\n        </StyledQuoteSection>\r\n    )\r\n};\r\n\r\nexport default QuotesSection;\r\n","import styled, {css} from 'styled-components';\r\n\r\nexport const StyledInfoSection = styled.div`\r\n    min-height: 470px;\r\n    clip-path: polygon(36% 8%, 30% 0, 100% 0, 100% 100%, 0 100%, 0 0);\r\n    background-color: ${({theme}) => theme.colors.secondary};\r\n    display: flex;\r\n    padding-bottom: 100px;\r\n    \r\n    ${({ theme }) => theme.mediaBreakpoints.lg} {\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nexport const InfoImageContainer = styled.div`\r\n    flex: 1;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    display: flex;\r\n    margin-top: 50px;\r\n    \r\n    ${({ theme }) => theme.mediaBreakpoints.lg} {\r\n        margin-top: 100px;\r\n    }\r\n`;\r\n\r\nexport const ImageWrapper = styled.div`\r\n    width: 300px;\r\n    height: 300px;\r\n    background-color: ${({theme}) => theme.colors.primary};\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    clip-path: polygon(0 5%, 100% 0, 100% 94%, 0% 100%);\r\n`;\r\n\r\nexport const StyledImage = styled.img`\r\n    width: 90%;\r\n    height: 90%;\r\n    pointer-events: none;\r\n    user-select: none;\r\n`;\r\n\r\nexport const ArrowImage = styled.img`\r\n    width: 75px;\r\n    height: 75px;\r\n    transform: scaleY(-1) rotate(-20deg);\r\n    pointer-events: none;\r\n    user-select: none;\r\n    \r\n    ${({position}) => position === 'left' ? css`\r\n        transform: scaleY(-1) rotate(-20deg);\r\n    ` : css`\r\n        transform: scaleX(-1) rotate(-40deg);\r\n        margin-top: -25px;\r\n        margin-left: -10px;\r\n    `};\r\n`;\r\n\r\nexport const InfoTextContainer = styled.div`\r\n    flex: 1;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    margin-top: 50px;\r\n`;\r\n\r\n\r\nexport const InfoTitleParagraph = styled.p`   \r\n    font-family: Patrick Hand SC, serif;\r\n    font-size: ${({theme}) => theme.font.size.titleLg};\r\n    color: orange;\r\n    letter-spacing: 2px;\r\n    white-space: pre-wrap;\r\n    text-align: center;\r\n    \r\n    ${({ theme }) => theme.mediaBreakpoints.sm} {\r\n        font-size: ${({theme}) => theme.font.size.titleSm};\r\n    }\r\n`;\r\n\r\nexport const InfoTextParagraph = styled.p`\r\n    font-weight: ${({theme}) => theme.font.weight.bold};\r\n    text-transform: uppercase;    \r\n    font-family: ${({theme}) => theme.font.family};\r\n    font-size: ${({theme}) => theme.font.size.md};\r\n    width: 50%;\r\n    color: ${({theme}) => theme.colors.primary};\r\n    white-space: pre-wrap;\r\n    text-align: center;\r\n    line-height: 1.7;\r\n    \r\n    ${({ theme }) => theme.mediaBreakpoints.sm} {\r\n        font-size: ${({theme}) => theme.font.size.sm};\r\n    }\r\n`;\r\n\r\nexport const IconsContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;    \r\n`;\r\n","export default __webpack_public_path__ + \"static/media/pen.415c1c27.svg\";","export default __webpack_public_path__ + \"static/media/curved-arrow.b7b6c622.svg\";","import styled from 'styled-components';\r\n\r\nexport const StyledMediaIcon = styled.a`\r\n    width: 40px;\r\n    height: 40px;\r\n    background-color: white;\r\n    margin: 10px;\r\n    border-radius: 50%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n    transition: all 1s ease;\r\n    border: 1px solid black;\r\n    \r\n    &:hover {\r\n        opacity: 0.6;\r\n    }\r\n`;\r\n\r\nexport const StyledImg = styled.img`\r\n    width: 25px;\r\n    height: 25px;\r\n`;\r\n","import {StyledImg, StyledMediaIcon} from \"./SocialMediaIcon.styles\";\r\nimport React from \"react\";\r\nimport {links} from \"../../utils/info\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SocialMediaIcon = ({iconType}) => {\r\n\r\n    return (\r\n        <StyledMediaIcon title={links[iconType].title} href={links[iconType].url} target={'_blank'}>\r\n            <StyledImg src={links[iconType].img}/>\r\n        </StyledMediaIcon>\r\n    )\r\n}\r\n\r\nSocialMediaIcon.propTypes = {\r\n    iconType: PropTypes.string.isRequired\r\n}\r\n\r\nSocialMediaIcon.defaultProps = {\r\n    iconType: 'portfolio'\r\n}\r\n\r\nexport default SocialMediaIcon;\r\n","import {\r\n    ArrowImage, IconsContainer,\r\n    ImageWrapper,\r\n    InfoImageContainer,\r\n    InfoTextContainer, InfoTextParagraph, InfoTitleParagraph,\r\n    StyledImage,\r\n    StyledInfoSection\r\n} from \"./InfoSection.styles\";\r\nimport React from \"react\";\r\nimport penImage from '../../images/pen.svg';\r\nimport arrowImage from '../../images/curved-arrow.svg';\r\nimport SocialMediaIcon from \"../SocialMediaIcon/SocialMediaIcon\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst InfoSection = () => {\r\n\r\n    const {t} = useTranslation('common');\r\n\r\n    return (\r\n        <StyledInfoSection>\r\n            <InfoImageContainer>\r\n                <ArrowImage src={arrowImage} position={'left'}/>\r\n                <ImageWrapper>\r\n                    <StyledImage src={penImage}/>\r\n                </ImageWrapper>\r\n                <ArrowImage src={arrowImage} position={'right'}/>\r\n            </InfoImageContainer>\r\n            <InfoTextContainer>\r\n                <InfoTitleParagraph>{t('quotes_service_title')}</InfoTitleParagraph>\r\n                <InfoTextParagraph>{t('quotes_service_text')}</InfoTextParagraph>\r\n                <IconsContainer>\r\n                    <SocialMediaIcon iconType={'portfolio'}/>\r\n                    <SocialMediaIcon iconType={'github'}/>\r\n                    <SocialMediaIcon iconType={'bitbucket'}/>\r\n                </IconsContainer>\r\n            </InfoTextContainer>\r\n        </StyledInfoSection>\r\n    )\r\n};\r\n\r\nexport default InfoSection;\r\n","import React from \"react\";\r\nimport Layout from \"../components/Layout/Layout\";\r\nimport QuotesSection from \"../components/QuotesSection/QuotesSection\";\r\nimport InfoSection from \"../components/InfoSection/InfoSection\";\r\n\r\nconst Home = () => {\r\n\r\n    return (\r\n        <Layout title={'home'}>\r\n            <QuotesSection/>\r\n            <InfoSection/>\r\n        </Layout>\r\n    )\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\nimport {Route} from 'react-router';\nimport {HashRouter, Routes} from 'react-router-dom';\nimport Home from \"./pages/Home\";\n\nconst App = () => {\n    return (\n        <HashRouter>\n            <Routes>\n                <Route path={'/'} element={<Home/>}/>\n            </Routes>\n        </HashRouter>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\r\nimport { quotesReducer } from \"./quotesReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    quotesReducer\r\n});\r\n","import {applyMiddleware, createStore} from \"redux\";\r\nimport {rootReducer} from \"../reducers/rootReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport i18next from \"i18next\";\nimport {I18nextProvider} from 'react-i18next';\nimport common_en from './translations/en.json';\nimport common_pl from './translations/pl.json';\nimport {Provider} from 'react-redux';\nimport store from './store/store';\n\ni18next.init({\n    interpolation: {escapeValue: false},\n    lng: localStorage.getItem('language') ?? 'en',\n    resources: {\n        en: {\n            common: common_en\n        },\n        pl: {\n            common: common_pl\n        },\n    },\n});\n\nReactDOM.render(\n    <Provider store={store}>\n        <I18nextProvider i18n={i18next}>\n            <App />\n        </I18nextProvider>\n    </Provider>,\ndocument.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}